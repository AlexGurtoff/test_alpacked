
name: Pipeline-CI-CD

on:

  pull_request:
    branches: master

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        
      - name: Installing gatsby & npm
        working-directory: ./web
        run: |
          ls -la
          npm install
        
      - name: Setup npm
        working-directory: ./web
        run: |
          npm run setup -- --spaceId=${{ secrets.CONTENTFUL_SPACE_ID }} --managementToken=${{ secrets.CONTENTFUL_MANAGEMENT_KEY }} --accessToken=${{ secrets.CONTENTFUL_DELIVERY_KEY }}
          ls -la
        
      - name: Build the artifact
        working-directory: ./web
        run: |
          npm run build
          ls -la
          ls ./public
          
      - name: Upload the artifact
        uses: actions/upload-artifact@v2
        with:
          name: public
          path: web/public



  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: eu-west-3
          
      - name: Download the artifact
        uses: actions/download-artifact@v2
        with:
          name: public
          path: public
      
      - name: List folder
        run: |
          ls -la
          ls public
      
      - name: Requirements install
        working-directory: ./pulumi
        run: pip install -r requirements.txt
        
      - name: Create infrastructure by Pulumi
        uses: pulumi/actions@v3
        with:
          command: up
          stack-name: dev
          work-dir: pulumi
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_SECRET_KEY }}
      
      - name: Deploy to S3
        working-directory: ./pulumi
        run: aws s3 cp ../public/ s3://$(pulumi stack output bucket) --recursive
      
